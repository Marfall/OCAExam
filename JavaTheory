ПРИМИТИВНЫЕ ТИПЫ ДАННЫХ. ПЕРЕМЕННЫЕ:


        - Тип данных:

                - Множество допустимых значений этих данных, а также совокупность операций над ними.


        - Перменная:

                - Именнованная область памяти, адрес которой можно использовать для осуществления доступа к данным 
                  и манипуляций над ними в ходе выполнения программы.


        => Когда вы назначаете переменной какое-либо значение, это значение хранится в области памяти и с помощью имени переменной
           можно обратиться к памяти за значением.


        Составные части переменной:

            - Тип   
            - Имя
            - Размер
            - Значение

        
        Типы данных в Java:

            - Простые (primitive)
            - Ссылочные (reference)


        В Java 8 примитивных типов данных:

            - Численные (numeric):
                - целые (integers)           - byte, short, int , long
                - дробные (floating point)   - float, double

            - Символьные (character)
            - Логические (boolean)

            int - целочиленный тип данных в Java по умолчанию

            double - вещественный тип данных в Java по умолчанию

            
            - Для оперерирования типом данных long, нужно использовать L :

              long var = 1000000000000000L;

              - Аналогично - float:

              float var = 2.5f;


              - Проблем с float x = 20;  не будет, поскольку int находится внутри float


            char - символьный, занимает 2 байта, имеет диапазон  0 - 65536
            
            Способы задания char:
                
                char c1 = 'a';

                char c2 = 500;   - задание 500-го символа юникода - стандарта кодирования символов, содержащего знаки почти всех
                                   письменых языков.

                char c3 = '\u1234'  - порядковый номер символа в юникоде   '\u0500'  - шестнадцатириная система


            boolean - размер строго не определен, принимает значения true/false




СИСТЕМЫ СЧИСЛЕНИЙ:


         int e = 60;
         int e1 = 0b111100;         - двоичная       
         int e2 = 074;              - компилятор поймет что 8-ричная
         int e3 = 0x3C              - шестнадцатириная

         int a7 = 1_000_000;        - удобное оформление чисмл с множеством цифр



        Нельзя использовать underscore:

            - В начале и в конце числа

            - До и после точки в дробных числах

            - До и после букв L, l, F, f, D, d 

            - До, после и между 0X, 0x, 0B, 0b

            Исключение: underscore можно использовать после 0, который указывает, что число в двоичном формате: 0_74




